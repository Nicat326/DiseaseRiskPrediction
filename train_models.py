#!/usr/bin/env python3
"""
ModellÉ™ri tÉ™lim etmÉ™k Ã¼Ã§Ã¼n ayrÄ± skript
Bu skripti iÅŸÉ™ salmaqla modellÉ™ri É™vvÉ™lcÉ™dÉ™n tÉ™lim edÉ™ bilÉ™rsiniz
"""

from data_loader import DataLoader
from model_trainer import ModelTrainer
import os

def main():
    print("ğŸš€ XÉ™stÉ™lik Riski ProqnozlaÅŸdÄ±rma ModellÉ™rinin TÉ™limi BaÅŸlayÄ±r...")
    
    # MÉ™lumatlarÄ± yÃ¼klÉ™yirik
    print("ğŸ“Š MÉ™lumatlar yÃ¼klÉ™nir...")
    data_loader = DataLoader()
    data_loader.load_pima_diabetes_data()
    X_train, X_test, y_train, y_test = data_loader.prepare_data()
    
    print(f"âœ… MÉ™lumatlar hazÄ±rlandÄ±:")
    print(f"   - TÉ™lim nÃ¼munÉ™lÉ™ri: {len(X_train)}")
    print(f"   - Test nÃ¼munÉ™lÉ™ri: {len(X_test)}")
    print(f"   - Feature sayÄ±: {len(data_loader.get_feature_names())}")
    
    # ModellÉ™ri tÉ™lim edirik
    print("\nğŸ¤– ModellÉ™r tÉ™lim edilir...")
    model_trainer = ModelTrainer()
    models, scores = model_trainer.train_models(X_train, X_test, y_train, y_test)
    
    # NÉ™ticÉ™lÉ™ri gÃ¶stÉ™ririk
    print("\nğŸ“ˆ Model PerformansÄ±:")
    for model_name, score_dict in scores.items():
        print(f"   {model_name}:")
        print(f"     - DÉ™qiqlik: {score_dict['accuracy']:.3f}")
        print(f"     - AUC: {score_dict['auc']:.3f}")
    
    # ModellÉ™ri saxlayÄ±rÄ±q
    print("\nğŸ’¾ ModellÉ™r saxlanÄ±r...")
    model_trainer.save_models()
    
    print("\nâœ… TÉ™lim tamamlandÄ±! Ä°ndi Streamlit tÉ™tbiqini iÅŸÉ™ sala bilÉ™rsiniz:")
    print("   streamlit run app.py")

if __name__ == "__main__":
    main()
